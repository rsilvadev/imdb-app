{"version":3,"sources":["components/MovieCard.js","components/Genre.js","components/Loading.js","utils/constants.js","utils/functions.js","utils/services.js","components/Home.js","App.js","index.js"],"names":["MovieCard","movie","changeSelectedMovie","className","style","backgroundImage","cover","onClick","window","scrollTo","changeMovieAndScrollUp","id","title","Genre","genre","setMovieGenre","name","Loading","height","color","API_URL","getQueryParams","obj","Object","entries","filter","item","undefined","includes","map","join","ApiUtils","response","ok","json","then","data","message","error","statusText","Error","Services","url","method","body","parameters","headers","fetchUrl","fetch","params","this","makeRequest","handleFailedRequest","console","log","Home","locationSearch","replace","split","forEach","item_split","getQueryObj","useLocation","search","useState","searchContainer","setSearchContainer","movies","setMovies","selectedMovie","setSelectedMovie","searchText","setSearchText","loading","setLoading","isExpanded","setIsExpanded","setGenre","showArrowDown","setShowArrowDown","nextUrl","setNextUrl","searchInput","useRef","useEffect","fetchMovies","genre_id","history","replaceState","controlScrollBottom","scrollY","document","querySelector","offsetHeight","innerHeight","documentElement","scrollTop","addEventListener","removeEventListener","length","resetMovies","getMovies","results","next","previous","fetchMovieDetail","catch","getMovieDetail","display","type","placeholder","onChange","e","target","value","searchMovie","ref","current","focus","year","synopsis","genres","score","href","external_id","rel","onTransitionEnd","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6315ad93.chunk.js","sourcesContent":["import '../scss/MovieCard.scss';\n\nconst MovieCard = ({ movie, changeSelectedMovie }) => {\n  const changeMovieAndScrollUp = (movie) => {\n    changeSelectedMovie(movie);\n    window.scrollTo(0, 0);\n  }\n\n  return (\n    <div className=\"col-3 my-3 movie-card-container\">\n      <div className=\"movie-card\" style={{ backgroundImage: `url(${movie.cover})` }} onClick={() => changeMovieAndScrollUp(movie.id)}>\n        <div className=\"col-12 d-flex justify-content-center align-items-center movie-card-info\">\n          <span className=\"p-3\">{movie.title}</span>\n        </div>\n        <div className=\"movie-card-overlay\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieCard;\n","import '../scss/Genre.scss';\n\nconst Genre = ({ genre, setMovieGenre }) => {\n  return (\n    <button className=\"py-1 px-2 genre\" onClick={() => setMovieGenre(genre.id)}>\n      { genre.name }\n    </button>\n  );\n}\n\nexport default Genre;\n","const Loading = () => {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col d-flex justify-content-center align-items-center\" style={{ height: '100vh' }}>\n          <i className=\"fas fa-circle-notch fa-2x fa-spin\" style={{ color: 'white' }}></i>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Loading;","// URLS\nexport const API_URL = 'https://ec-guifoes.com/imdb-api/';\n","export const getQueryParams = (obj) => {\n  return `?${Object.entries(obj)\n    .filter(item => ![null, undefined, ''].includes(item[1]))\n    .map(item => item.join('=')).join('&')}`\n}\n\nexport const getQueryObj = (locationSearch) => {\n  let params = {};\n\n  locationSearch.replace('?', '').split('&').forEach(item => {\n    let item_split = item.split('=');\n\n    if(item_split[1]) {\n      params[item_split[0]] = item_split[1];\n    }\n  })\n\n  return params;\n}\n","import { API_URL } from './constants';\nimport { getQueryParams } from './functions';\n\nvar ApiUtils = {\n  checkStatus: function(response) {\n    if (response.ok) {\n      return response;\n    }\n\n    return response.json().then((data) => {\n      let message = data.error.message || response.statusText;\n      throw new Error(message);\n    });\n  }\n};\n\nclass Services {\n  static async makeRequest(url, method = 'GET', body = null) {\n    const headers = {\n      'Accept': 'application/json'\n    };\n\n    const parameters = { method, headers };\n\n    if (body !== null) {\n      parameters.body = body;\n    }\n\n    const fetchUrl = fetch(url, parameters);\n\n    return fetchUrl\n      .then(ApiUtils.checkStatus)\n      .then((response) => {\n        return response.json();\n      });\n  }\n\n  static async getMovies(url=null, params) {\n    if(!url) {\n      url = `${API_URL}movies/${getQueryParams(params)}`;\n    }\n\n    return this.makeRequest(url);\n  }\n\n  static async getMovieDetail(id) {\n    return this.makeRequest(\n      `${API_URL}movies/${id}/`\n    );\n  }\n}\n\nexport default Services;\n\nexport const handleFailedRequest = (error) => {\n  console.log(error);\n  \n  return\n}","import { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport MovieCard from './MovieCard';\nimport Genre from './Genre';\nimport Loading from './Loading';\nimport '../scss/Home.scss';\nimport Services, { handleFailedRequest } from '../utils/services';\nimport { getQueryParams, getQueryObj } from '../utils/functions';\n\nconst Home = () => {\n  const params = getQueryObj(useLocation().search);\n\n  const [searchContainer, setSearchContainer] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [searchText, setSearchText] = useState(params['search']);\n  const [loading, setLoading] = useState(true);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [genre, setGenre] = useState(params['genre']);\n  const [showArrowDown, setShowArrowDown] = useState(true);\n  const [nextUrl, setNextUrl] = useState(null);\n  const searchInput = useRef(null);\n \n  useEffect(() => {\n    if(genre) {\n      fetchMovies(true);\n    }\n  }, [genre]);\n\n  const setMovieGenre = (genre_id) => {\n    setGenre(genre_id);\n    window.history.replaceState({}, null, getQueryParams({search: searchText, genre: genre_id}));\n  }\n\n  const controlScrollBottom = () => {\n    if(window.scrollY > document.querySelector('.header').offsetHeight - 100) {\n      setShowArrowDown(false);\n    } else {\n      setShowArrowDown(true);\n    }\n\n    if(window.innerHeight + document.documentElement.scrollTop >= document.documentElement.offsetHeight) {\n      console.log('next', nextUrl);\n      fetchMovies();\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', controlScrollBottom);\n    fetchMovies(true);\n\n    return () => {\n      window.removeEventListener('scroll', controlScrollBottom);\n    };\n  }, []);\n\n  useEffect(() => {\n    if(searchText === '' || (searchText && searchText.length > 2)) {\n      fetchMovies(true);\n    }\n  }, [searchText]);\n\n  // useEffect(() => {\n  //   console.log('next', nextUrl);\n  // }, [nextUrl]);\n\n  const fetchMovies = (resetMovies=false) => {\n    if(!resetMovies && !nextUrl) {\n      return\n    }\n\n    Services.getMovies(resetMovies ? null : nextUrl, {search: searchText, genre: genre})\n      .then(data => {\n        setMovies(resetMovies ? data.results : [...movies, ...data.results]);\n        setNextUrl(data.next);\n\n        if(!data.previous) {\n          if(data.results.length !== 0) {\n            fetchMovieDetail(data.results[0].id);\n          } else {\n            setSelectedMovie(null);\n            setLoading(false);\n          }\n        }\n      })\n      .catch(handleFailedRequest)\n  }\n\n  const fetchMovieDetail = (id) => {\n    Services.getMovieDetail(id)\n      .then(data => {\n        setSelectedMovie(data);\n\n        if(loading) {\n          setLoading(false);\n        }\n      })\n  }\n\n  const searchMovie = (e) => {\n    setSearchText(e.target.value);\n    \n    window.history.replaceState({}, null, getQueryParams({search: e.target.value, genre: genre}));\n  }\n\n  const handleTransitionEnd = (e) => {\n    if(e.target.className.includes('movie-list-container')) {\n      e.target.className += ' d-none';\n    }\n  }\n\n  const toggleSearchInput = () => {\n    setSearchContainer(!searchContainer);\n    searchInput.current.focus();\n  }\n\n  if(loading) {\n    return (\n      <Loading />\n    )\n  }\n\n  return (\n      <div className=\"container-fluid\">\n        <div className=\"search-container\" style={isExpanded ? { display: 'none' } : { display: 'initial' }}>\n          <input type=\"text\" placeholder=\"Search\" className={`search-input ${searchContainer && 'show-search-input'}`} onChange={e => searchMovie(e)} value={searchText} ref={searchInput} />\n          <i className=\"fas fa-search search-button\" onClick={() => toggleSearchInput()}></i>\n        </div>\n\n        { selectedMovie && \n          <div className={`row justify-content-center align-content-center header ${isExpanded && 'full-height-detail'}`}>\n            <div className=\"col-6 p-0 movie-info-container\">\n              <div className=\"movie-info\">\n                <h1>{selectedMovie.title}</h1><h5>{selectedMovie.year}</h5>\n                <span>{selectedMovie.synopsis}</span>\n                <div className=\"row align-items-center my-3\">\n                  <div className=\"col-9\">\n                    { selectedMovie.genres.map(genre => <Genre key={genre.id} genre={genre} setMovieGenre={setMovieGenre} />) }\n                  </div>\n                  <div className=\"col-3 d-flex justify-content-end align-items-center\">\n                    <span className=\"movie-score\">{ selectedMovie.score }/10</span>\n                    <a href={`https://www.imdb.com/title/${selectedMovie.external_id}`} target=\"_blank\" rel=\"noreferrer\">\n                      <i className=\"fab fa-imdb imdb-icon\"></i>\n                    </a>\n                  </div>\n                </div>\n              </div>\n              <i className={`fas fa-chevron-down fa-2x detail-button ${isExpanded && 'arrow-up'}`} style={ showArrowDown ? { display: 'block' } : { display: 'none' } } onClick={() => setIsExpanded(!isExpanded)}></i>\n            </div>\n            <div className=\"movie-bg\" style={{ backgroundImage: `url(${selectedMovie.cover})` }}>\n              <div className=\"movie-bg-overlay\"></div>\n            </div>\n          </div>\n        }\n\n        <div className={`row justify-content-center movie-list-container ${isExpanded && 'hide-list'}`} onTransitionEnd={handleTransitionEnd}>\n          <div className=\"col-6\">\n            <div className=\"row my-3\">\n              { movies.length === 0 ? (\n                <div className=\"row\">\n                  <div className=\"col d-flex justify-content-center align-items-center\" style={{ height: '100vh' }}>\n                    <span style={{ color: 'white' }}>No results</span>\n                  </div>\n                </div>\n              ) : (\n                movies.map(movie => <MovieCard key={movie.id} movie={movie} changeSelectedMovie={fetchMovieDetail} />)\n              ) \n              }\n            </div>\n          </div>\n        </div>\n\n        <button onClick={() => fetchMovies()}>Load more</button>\n      </div>\n  );\n}\n\nexport default Home;\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport Loading from './components/Loading';\n\nconst App = () => {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}